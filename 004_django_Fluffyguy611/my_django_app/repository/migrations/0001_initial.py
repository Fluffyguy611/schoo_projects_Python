# Generated by Django 4.0.4 on 2022-05-28 08:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import repository.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('genre', models.CharField(choices=[('Thriller', 'Thriller'), ('Drama', 'Drama'), ('Horror', 'Horror'), ('Action', 'Action'), ('Sci-fi', 'Sci-fi'), ('Historical', 'Historical'), ('Documentary', 'Documentary'), ('None', 'None')], max_length=11)),
                ('ISBN', models.CharField(max_length=13, unique=True, validators=[repository.models.validate_ISBN])),
                ('in_deposit', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Books',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(choices=[('Books', 'Books'), ('Movies', 'Movies'), ('Cds', 'CDs')], max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('band', models.CharField(blank=True, max_length=255)),
                ('music_list', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('genre_1', models.CharField(blank=True, choices=[('Rap', 'Rap'), ('Pop', 'Pop'), ('Classic', 'Classic'), ('Rock', 'Rock'), ('Metal', 'Metal'), ('Heavy metal', 'Heavy metal'), ('Disco-polo', 'Disco-polo'), ('None', 'None')], max_length=11)),
                ('genre_2', models.CharField(blank=True, choices=[('Rap', 'Rap'), ('Pop', 'Pop'), ('Classic', 'Classic'), ('Rock', 'Rock'), ('Metal', 'Metal'), ('Heavy metal', 'Heavy metal'), ('Disco-polo', 'Disco-polo'), ('None', 'None')], max_length=11)),
                ('in_deposit', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'CDs',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('director', models.CharField(default='None', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('genre_1', models.CharField(blank=True, choices=[('Thriller', 'Thriller'), ('Drama', 'Drama'), ('Horror', 'Horror'), ('Action', 'Action'), ('Sci-fi', 'Sci-fi'), ('Historical', 'Historical'), ('Documentary', 'Documentary'), ('None', 'None')], max_length=11)),
                ('genre_2', models.CharField(blank=True, choices=[('Thriller', 'Thriller'), ('Drama', 'Drama'), ('Horror', 'Horror'), ('Action', 'Action'), ('Sci-fi', 'Sci-fi'), ('Historical', 'Historical'), ('Documentary', 'Documentary'), ('None', 'None')], max_length=11)),
                ('genre_3', models.CharField(blank=True, choices=[('Thriller', 'Thriller'), ('Drama', 'Drama'), ('Horror', 'Horror'), ('Action', 'Action'), ('Sci-fi', 'Sci-fi'), ('Historical', 'Historical'), ('Documentary', 'Documentary'), ('None', 'None')], max_length=11)),
                ('duration', models.IntegerField(blank=True)),
                ('in_deposit', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Movies',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposit_date', models.DateField()),
                ('deposit_length', models.DateField()),
                ('depositet_book', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.book')),
                ('depositet_cd', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.cd')),
                ('depositet_movie', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='can_be_deposited_by',
            field=models.ManyToManyField(blank=True, through='repository.Rent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movie',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Movies', to='repository.category'),
        ),
        migrations.AddField(
            model_name='cd',
            name='can_be_deposited_by',
            field=models.ManyToManyField(blank=True, through='repository.Rent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cd',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CDs', to='repository.category'),
        ),
        migrations.AddField(
            model_name='book',
            name='can_be_deposited_by',
            field=models.ManyToManyField(blank=True, through='repository.Rent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Books', to='repository.category'),
        ),
    ]
